{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///home/thr00n3r/Documents/CodingProject/JHIC-2025/Booking-Infra_Competition/src/app/api/chatbot/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport knowledgeBase from '@/data/chatbot-knowledge.json';\n\n// Initialize Gemini AI\nconst genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY || '', {\n  apiVersion: 'v1'\n});\n\nexport async function POST(request: NextRequest) {\n  try {\n    const { message } = await request.json();\n    \n    if (!message) {\n      return NextResponse.json(\n        { error: 'No message provided' },\n        { status: 400 }\n      );\n    }\n\n    // Check if API key is available\n    if (!process.env.GEMINI_API_KEY) {\n      console.error('GEMINI_API_KEY not found in environment variables');\n      return NextResponse.json(\n        { error: 'API key not configured' },\n        { status: 500 }\n      );\n    }\n\n    // Process message and generate intelligent response\n    const response = generateIntelligentResponse(message);\n\n    return NextResponse.json({ \n      response: response,\n      timestamp: new Date().toISOString()\n    });\n\n  } catch (error) {\n    console.error('Chatbot error:', error);\n    return NextResponse.json(\n      { error: 'Internal server error', details: error.message },\n      { status: 500 }\n    );\n  }\n}\n\n// Helper function to get chat history from cookies\nfunction getChatHistory(request: NextRequest) {\n  const chatHistoryCookie = request.cookies.get('chat_history');\n  \n  if (chatHistoryCookie) {\n    try {\n      return JSON.parse(chatHistoryCookie.value);\n    } catch (error) {\n      console.error('Error parsing chat history:', error);\n    }\n  }\n  \n  return [];\n}\n\n// Helper function to save chat history to cookies\nfunction saveChatHistory(request: NextRequest, chatHistory: any[]) {\n  // Limit chat history to last 10 messages to avoid cookie size issues\n  const limitedHistory = chatHistory.slice(-10);\n  \n  // This would typically be handled by setting cookies in the response\n  // For now, we'll just return the limited history\n  return limitedHistory;\n}\n\n// Helper function to generate intelligent response based on knowledge base\nfunction generateIntelligentResponse(message: string): string {\n  const lowerMessage = message.toLowerCase();\n  \n  // Greeting responses\n  if (lowerMessage.includes('halo') || lowerMessage.includes('hello') || lowerMessage.includes('hi')) {\n    return `Halo! Saya Lily, asisten virtual untuk sistem booking ${knowledgeBase.system_info.name}. Ada yang bisa saya bantu?`;\n  }\n  \n  // Specific facility search (check this first)\n  for (const facility of knowledgeBase.facilities) {\n    const facilityName = facility.name.toLowerCase();\n    if (lowerMessage.includes(facilityName) || \n        (lowerMessage.includes('aula') && facilityName.includes('aula')) ||\n        (lowerMessage.includes('lab 1') && facilityName.includes('lab 1')) ||\n        (lowerMessage.includes('lab 2') && facilityName.includes('lab 2')) ||\n        (lowerMessage.includes('lab 5') && facilityName.includes('lab 5')) ||\n        (lowerMessage.includes('ruang gabungan') && facilityName.includes('ruang gabungan')) ||\n        (lowerMessage.includes('podcast') && facilityName.includes('podcast')) ||\n        (lowerMessage.includes('rapat') && facilityName.includes('rapat')) ||\n        (lowerMessage.includes('robotik') && facilityName.includes('robotik')) ||\n        (lowerMessage.includes('cyber') && facilityName.includes('cyber'))) {\n      return `**${facility.name}**\\n\\n` +\n             `üìù Deskripsi: ${facility.description}\\n` +\n             `üë• Kapasitas: ${facility.capacity} orang\\n` +\n             `‚ú® Fitur: ${facility.features.join(', ')}\\n` +\n             `üéØ Cocok untuk: ${facility.suitable_for.join(', ')}\\n\\n` +\n             `Untuk booking fasilitas ini, silakan klik tombol \"Buat Booking\" di dashboard.`;\n    }\n  }\n  \n  // Facility information\n  if (lowerMessage.includes('fasilitas') || lowerMessage.includes('ruang') || lowerMessage.includes('lab') || lowerMessage.includes('aula')) {\n    let response = `Fasilitas yang tersedia di ${knowledgeBase.system_info.name}:\\n\\n`;\n    knowledgeBase.facilities.forEach((facility, index) => {\n      response += `${index + 1}. **${facility.name}**\\n`;\n      response += `   - Kapasitas: ${facility.capacity} orang\\n`;\n      response += `   - Deskripsi: ${facility.description}\\n`;\n      response += `   - Cocok untuk: ${facility.suitable_for.join(', ')}\\n\\n`;\n    });\n    response += `Untuk booking, silakan klik tombol \"Buat Booking\" di dashboard.`;\n    return response;\n  }\n  \n  // Equipment information\n  if (lowerMessage.includes('peralatan') || lowerMessage.includes('equipment') || lowerMessage.includes('alat')) {\n    let response = `Peralatan yang tersedia:\\n\\n`;\n    knowledgeBase.equipment.forEach((item, index) => {\n      response += `${index + 1}. **${item.name}**\\n`;\n      response += `   - Jumlah: ${item.quantity} unit\\n`;\n      response += `   - Tersedia: ${item.available} unit\\n`;\n      response += `   - Deskripsi: ${item.description}\\n\\n`;\n    });\n    return response;\n  }\n  \n  // Booking procedures\n  if (lowerMessage.includes('cara booking') || lowerMessage.includes('prosedur') || lowerMessage.includes('langkah')) {\n    let response = `Cara melakukan booking di ${knowledgeBase.system_info.name}:\\n\\n`;\n    knowledgeBase.booking_procedures.forEach((step) => {\n      response += `**Langkah ${step.step}: ${step.title}**\\n`;\n      response += `${step.description}\\n\\n`;\n    });\n    return response;\n  }\n  \n  // Booking status\n  if (lowerMessage.includes('status') || lowerMessage.includes('cek booking')) {\n    let response = `Status booking yang tersedia:\\n\\n`;\n    knowledgeBase.booking_statuses.forEach((status) => {\n      response += `**${status.status}**: ${status.description}\\n`;\n      response += `Tindakan: ${status.action}\\n\\n`;\n    });\n    return response;\n  }\n  \n  // Payment information\n  if (lowerMessage.includes('pembayaran') || lowerMessage.includes('bayar') || lowerMessage.includes('payment')) {\n    let response = `Informasi pembayaran:\\n\\n`;\n    knowledgeBase.payment_statuses.forEach((status) => {\n      response += `**${status.status}**: ${status.description}\\n`;\n      response += `Tindakan: ${status.action}\\n\\n`;\n    });\n    return response;\n  }\n  \n  // FAQ\n  if (lowerMessage.includes('pertanyaan') || lowerMessage.includes('faq') || lowerMessage.includes('tanya')) {\n    let response = `Pertanyaan yang sering diajukan:\\n\\n`;\n    knowledgeBase.faq.forEach((faq, index) => {\n      response += `**${index + 1}. ${faq.question}**\\n`;\n      response += `${faq.answer}\\n\\n`;\n    });\n    return response;\n  }\n  \n  // Contact information\n  if (lowerMessage.includes('kontak') || lowerMessage.includes('hubungi') || lowerMessage.includes('admin')) {\n    return `Informasi kontak ${knowledgeBase.system_info.name}:\\n\\n` +\n           `üìß Email: ${knowledgeBase.contact_info.email}\\n` +\n           `üìû Telepon: ${knowledgeBase.contact_info.phone}\\n` +\n           `üìç Alamat: ${knowledgeBase.contact_info.address}\\n\\n` +\n           `Jam operasional:\\n` +\n           `Senin-Jumat: ${knowledgeBase.working_hours.monday_friday}\\n` +\n           `Sabtu: ${knowledgeBase.working_hours.saturday}\\n` +\n           `Minggu: ${knowledgeBase.working_hours.sunday}`;\n  }\n  \n  // Working hours\n  if (lowerMessage.includes('jam') || lowerMessage.includes('buka') || lowerMessage.includes('tutup')) {\n    return `Jam operasional ${knowledgeBase.system_info.name}:\\n\\n` +\n           `Senin-Jumat: ${knowledgeBase.working_hours.monday_friday}\\n` +\n           `Sabtu: ${knowledgeBase.working_hours.saturday}\\n` +\n           `Minggu: ${knowledgeBase.working_hours.sunday}`;\n  }\n  \n  \n  // Default response\n  return `Terima kasih atas pertanyaan Anda! Saya Lily, asisten virtual untuk ${knowledgeBase.system_info.name}.\\n\\n` +\n         `Saya bisa membantu dengan:\\n` +\n         `‚Ä¢ Informasi fasilitas dan peralatan\\n` +\n         `‚Ä¢ Prosedur booking\\n` +\n         `‚Ä¢ Status booking dan pembayaran\\n` +\n         `‚Ä¢ FAQ dan informasi kontak\\n\\n` +\n         `Ada yang spesifik yang ingin Anda tanyakan?`;\n}\n\n// Helper function to remove think blocks (if any)\nfunction removeThinkBlock(content: string): string {\n  return content.replace(/<think>.*?<\\/think>/gs, '').trim();\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}